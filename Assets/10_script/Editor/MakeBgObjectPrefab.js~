#pragma strict






@MenuItem("MyTools/Collider On")
static function ColliderOn()
{
	changeColliderState( true );
}

@MenuItem("MyTools/Collider Off")
static function ColliderOff()
{
	changeColliderState( false );
}

@MenuItem("MyTools/Collider On In Children")
static function ColliderOnInChildren()
{
	changeCollidersState( true );
}

@MenuItem("MyTools/Collider Off In Children")
static function ColliderOffInChildren()
{
	changeCollidersState( false );
}




static function changeColliderState( f:boolean )
{
	for( var go:GameObject in Selection.gameObjects )
	{
		
		var cd:Collider = go.GetComponent.<Collider>();
		
		if( cd )
		{
			cd.enabled = f;
			
			Debug.Log( "Collider of " + go.name + " was changed to " + f );
		}
		
	}
}

static function changeCollidersState( f:boolean )
{
	for( var go:GameObject in Selection.gameObjects )
	{
		
		for( var c:Collider in go.GetComponentsInChildren.<Collider>(true) )
		{
			c.enabled = f;
			
			Debug.Log( "Collider of " + go.name + " was changed to " + f );
		}
		
	}
}






@MenuItem("MyTools/RigidBody Constraints Off In Children")
static function ConstraintsOffInChildren()
{
	changeOffConstraintsState();
}

static function changeOffConstraintsState()
{
	for( var go:GameObject in Selection.gameObjects )
	{
		
		for( var rb:Rigidbody in go.GetComponentsInChildren.<Rigidbody>(true) )
		{
			rb.constraints = RigidbodyConstraints.None;
			
			Debug.Log( "Constranint of " + go.name + " was changed to None" );
		}
		
	}
}




@MenuItem("MyTools/Active On In Children")
static function ActiveOnInChildren()
{
	changeActiveState( true );
}

@MenuItem("MyTools/Active Off In Children")
static function ActiveOffInChildren()
{
	changeActiveState( false );
}

static function changeActiveState( f:boolean )
{
	for( var go:GameObject in Selection.gameObjects )
	{
		
		for( var c:Transform in go.GetComponentsInChildren.<Transform>(true) )
		{
			c.gameObject.SetActive( f );
			
			Debug.Log( "Active of " + go.name + " was changed to " + f );
		}
		
	}
}






@MenuItem("MyTools/Destroy RigidBody In Children")
static function destroyRigidbodysInChildren()
{
	destroyRigidbodys();
}

static function destroyRigidbodys()
{
	for( var go:GameObject in Selection.gameObjects )
	{
		
		for( var rb:Rigidbody in go.GetComponentsInChildren.<Rigidbody>(true) )
		{
			Debug.Log( go.name +":"+ rb.name + " ... removed Rigidbody" );
			
			DestroyImmediate( rb );
		}
		
	}
}


@MenuItem("MyTools/Destroy Joint In Children")
static function destroyJointsInChildren()
{
	destroyJoints();
}

static function destroyJoints()
{
	for( var go:GameObject in Selection.gameObjects )
	{
		
		for( var j:Joint in go.GetComponentsInChildren.<Joint>(true) )
		{
			Debug.Log( go.name +":"+ j.name + " ... removed Joint" );
			
			DestroyImmediate( j );
		}
		
	}
}












