Shader "Custom/Radar"
{
	
	Properties
	{
		_MainTex ("Base (RGB)", 2D) = "white" {}
	}
	
	
	SubShader
	{
		Tags {"Queue"="Transparent" "IgnoreProjector"="True" "RenderType"="Transparent"}
		LOD 200
		
		Pass
	    {
			
		    ZWrite Off
		    Blend SrcAlpha OneMinusSrcAlpha 
		    Lighting Off
			
			CGPROGRAM
				#pragma only_renderers d3d9 opengl gles
				#pragma glsl
				#pragma vertex vert3
				#pragma fragment frag
			//	#pragma target 3.0
				
				struct vtxpos
				{
					half4	vertex : POSITION;
				    half2	texcoord : TEXCOORD0;
				    half4	color : COLOR;
				};
				
				struct v2f
				{
				    half4	pos : SV_POSITION;
				    half2	uv : TEXCOORD0;
				    half4	color : COLOR;
				};
				
				
				v2f vert3(
					vtxpos	v,
					uniform half4	c[10],
					uniform half4	p[200]
				)
				{
					v2f o;
					
					int i = v.color.a * 255;
					
					half4	pos = half4( v.vertex.xy * p[i].z, v.vertex.z, v.vertex.w ) + half4( p[i].xy, 0.0f, 0.0f );
					
					o.pos = mul( UNITY_MATRIX_MVP, pos );
					
					o.uv = v.texcoord;
					
					int	ic	= p[i].w;
					
					o.color = c[ ic ];
					
					return o;
				}
				
				
				
				
				fixed4 frag(
					v2f i,
					uniform sampler2D _MainTex
				) : COLOR
				{
				    fixed4 texcol = tex2D(_MainTex, i.uv);
				    return texcol * i.color;
				}
				
			ENDCG
			
	    }
	    
	}
	
}

